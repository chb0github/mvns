#!/usr/bin/env node
const http = require('http')
const querystring = require('querystring');
const defaultFormat = d => `release data: ${new Date(d.timestamp).toLocaleDateString()} ${d.id}:${d.latestVersion}`

const formatter = process.argv[2].match('--.*') ? require(`${process.cwd()}/mappers/${process.argv[2].slice(2)}`) : defaultFormat

const options = {
  hostname: 'search.maven.org',
  path: `/solrsearch/select?${querystring.stringify({
    row: 20,
    wt: 'json',
    q: process.argv[2].match('--.*') ? process.argv[3] : process.argv[2]
  })}`,
  headers: {
    'Accept': 'application/json'
  }
};

new Promise((good,bad) => {
  const req = http.request(options,  (res) => {
    let data = '';
    res.setEncoding('utf8');

    res.on('data', d => data += d);

    res.on('end', () => {
      if(!res.headers['content-type'].match('.*json'))
        return bad(JSON.stringify({
          req: req.headers,
          body: data
        },null,4))

      if(res.statusCode >= 400)
        return bad(JSON.stringify(JSON.parse(data,null,4)))

      return good(JSON.parse(data,null,4))
    });
  });

  req.on('error', bad);

  req.end();
}).then(data => {
  data.response.docs.map(formatter).forEach(s => console.log(s))
  process.exit(0)
}).catch(e => {
  console.error(e)
  process.exit(-1)
})
